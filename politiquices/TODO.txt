arquivo_pt:
==========
    - method to detect semantically similar titles
    - detect very similar titles / same URL, probably different crawls:
        - keep older date/version

classifiers
===========
    relevancy:
    ----------
        - is this really needed? if there are no interesting named-entities discard
        - use 'PER' on relevancy classifiers instead of names?

    relationship:
    -------------
        - titles with more than one relationship?
        - embeddings: better/cleaner
        - Transformer models

    named_entity:
    -------------
        - add also 'PER' from a hand-crafted list, see: https://spacy.io/usage/rule-based-matching

    entity_linking:
    ---------------
        - Filter out ppl born before 1935
        Linking Errors:
            - http://0.0.0.0:5000/entity?q=Q295049 as 'Pinto da Costa' (futebol)
            - http://0.0.0.0:5000/entity?q=Q4237195 as 'José Manuel Coelho'

   service:
   --------
     - log when queries to ElasticSearch fail
     - review classifier API arch:
        https://medium.com/@8B_EC/tutorial-serving-machine-learning-models-with-fastapi-in-python-c1a27319c459


SPARQL DB
=========
    - how to get SPARQL results with empty subject for repeated statements, i.e.: image + all offices ?
    - use OR in FILTER to avoid doing two queries:
            https://stackoverflow.com/questions/30501124/or-in-a-sparql-query

   Getting statements values:
      - https://stackoverflow.com/questions/54974504/sparql-question-how-to-return-property-labels-and-associated-date-qualifiers-fr
      - https://stackoverflow.com/questions/36023098/querying-wikidata-difference-between-p-and-wdt-default-prefix

   Federated queries:
      - http://sulab.org/2017/07/integrating-wikidata-and-other-linked-data-sources-federated-sparql-queries/
      - https://stackoverflow.com/questions/53012303/using-wikidata-label-service-in-federated-queries


Web App
=======

   - show all entities in the KB even the ones without any articles
   - initalize() and get_total_nr_articles_for_each_person() get the name from Wikidata rdfs:label

   - dentro da página de político
      - clicar no logo do partido: lista todas as pessoas desse partido
      - list de titulos de artigos:
        - por uma fotografia pequena ao lado do nome da pessoa;
        - nome da pessoa só apelido, porque?

      - top oponentes, top supporters (por ano/mes?)

    - um interface qualquer para poder selecionar as relações e o intervalo de datas

    - queries mais interessantes:
        - quais os partidos que acusam mais? e que partidos alvo?
        - pessoas do mesmo partido a acusarem pessoas do mesmo partido
        - triangulos politicos: qual a relação tipica entre X e Y, se X e Y sempre acusam/defendem Z
        - existem relações familiares no grafo? entre quem?

        - criar redes de apoio e acusação em função do tempo por exemplo, para ver as mudanças de
          alianças, depois podes fazer cena a longo prazo para veres quem são os grandes aliados

        - listar pessoas com informação incompleta: foto, cargos, etc.
          e explicar como alimentar a wikidata com fontes de informação :
                - https://www.politicaparatodos.pt/
                - http://demo.cratica.org/deputados/

    - pagina inicial:
      ir para um ano especifico e ver as relações/pessoas por ano mais revelantes/maior frequencia

    - procurar pessoa por nome
    - listar todas pessoas de uma forma mais leve/organizada

    - listar todos os partidos/organizações


   - Jinga tips: https://jinja.palletsprojects.com/en/2.11.x/templates/#batch


